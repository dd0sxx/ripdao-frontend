{"ast":null,"code":"var _jsxFileName = \"/Users/theo/Documents/ripdao-frontend/dapp/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport '../style/app.css';\nimport Header from './Header.js';\nimport TokenList from './TokenList.js';\nimport tigerNFTABI from '../assets/TigerNFT';\nimport ChainMsg from './Modal.js';\nimport BuyDialog from './BuyDialog.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [address, setAddress] = useState();\n  const [chainWarning, setChainWarning] = useState(false);\n  const [currentlyBuying, setCurrentlyBuying] = useState(null);\n  const [sortBy, setSortBy] = useState(0);\n  const totalSupply = 100;\n  let provider;\n  window.ethereum.enable().then(provider = new ethers.providers.Web3Provider(window.ethereum, \"mainnet\"));\n  const signer = provider.getSigner();\n  window.signer = signer; // const nftAddr = '0xDC04D8183a0C91c40E02dd5a0e06Ee6a2D25685F'\n  // const contract = new ethers.Contract(nftAddr, tigerNFTABI, provider);\n\n  const mainnet_chain_id = \"0x1\";\n  const sortOptions = ['by id', 'price low to high', 'price high to low', 'by tokens owned', 'last sold'];\n  window.ethereum.on('chainChanged', handleChainChanged);\n\n  function handleChainChanged(_chainId) {\n    if (_chainId.toString() !== mainnet_chain_id) {\n      setChainWarning(true);\n    }\n\n    window.location.reload();\n  }\n\n  async function connectToMetamask() {\n    try {\n      let res = await signer.getAddress();\n      console.log(\"Signed in\", res);\n      setAddress(res);\n\n      let _chainId = await window.ethereum.request({\n        method: 'eth_chainId'\n      });\n\n      if (_chainId.toString() !== mainnet_chain_id) {\n        setChainWarning(true);\n      }\n    } catch (err) {\n      console.log(\"Not signed in\");\n      await provider.send(\"eth_requestAccounts\", []);\n    }\n  }\n\n  const getWalletOfOwner = async () => {\n    console.log('meow');\n    let balanceBN = await contract.getBalance(address);\n    let balance = Number(balanceBN);\n    let temp = [...walletOfOwner];\n\n    for (let i = 0; i < balance; i++) {\n      let token = await contract.tigerByOwnerAndIndex(address, i);\n      temp.push(token);\n    }\n\n    console.log('temp: ', temp);\n    await setWalletOfOwner(temp);\n    return walletOfOwner;\n  };\n\n  useEffect(() => {\n    connectToMetamask().catch(err => console.error(err));\n  }, []);\n  useEffect(() => {\n    if (address) getWalletOfOwner().catch(err => console.error(err));\n  }, [address]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      address: address,\n      connect: connectToMetamask,\n      sortOptions: sortOptions,\n      setSortBy: setSortBy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TokenList, {\n      provider: provider,\n      address: address,\n      contract: contract,\n      page: page,\n      tokensPerPage: tokensPerPage,\n      totalSupply: totalSupply,\n      sortBy: sortBy,\n      setCurrentlyBuying: setCurrentlyBuying,\n      walletOfOwner: walletOfOwner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-centered \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-button\",\n        children: \"Page:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), page > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-button\",\n        onClick: () => {\n          setPage(page - 1);\n        },\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), (page + 1) * tokensPerPage < totalSupply ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-button\",\n        onClick: () => {\n          setPage(page + 1);\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 59\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChainMsg, {\n      open: chainWarning,\n      setOpen: setChainWarning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BuyDialog, {\n      currentlyBuying: currentlyBuying,\n      setCurrentlyBuying: setCurrentlyBuying,\n      contract: contract,\n      address: address,\n      signer: signer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"JOQ1sSPK6YGnJs0UcTFVsGkPB7Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/theo/Documents/ripdao-frontend/dapp/src/components/App.js"],"names":["useEffect","useState","ethers","Header","TokenList","tigerNFTABI","ChainMsg","BuyDialog","App","address","setAddress","chainWarning","setChainWarning","currentlyBuying","setCurrentlyBuying","sortBy","setSortBy","totalSupply","provider","window","ethereum","enable","then","providers","Web3Provider","signer","getSigner","mainnet_chain_id","sortOptions","on","handleChainChanged","_chainId","toString","location","reload","connectToMetamask","res","getAddress","console","log","request","method","err","send","getWalletOfOwner","balanceBN","contract","getBalance","balance","Number","temp","walletOfOwner","i","token","tigerByOwnerAndIndex","push","setWalletOfOwner","catch","error","page","tokensPerPage","setPage"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react';\nimport { ethers } from 'ethers';\nimport '../style/app.css';\nimport Header from './Header.js';\nimport TokenList from './TokenList.js';\nimport tigerNFTABI from '../assets/TigerNFT'\nimport ChainMsg from './Modal.js'\nimport BuyDialog from './BuyDialog.js'\n\nfunction App() {\n\n    const [address, setAddress] = useState()\n    const [chainWarning, setChainWarning] = useState(false)\n    const [currentlyBuying, setCurrentlyBuying] = useState(null)\n    const [sortBy, setSortBy] = useState(0)\n    \n    const totalSupply = 100\n\n    let provider\n    window.ethereum.enable().then(provider = new ethers.providers.Web3Provider(window.ethereum, \"mainnet\"))\n    const signer = provider.getSigner()\n    window.signer = signer\n    // const nftAddr = '0xDC04D8183a0C91c40E02dd5a0e06Ee6a2D25685F'\n    // const contract = new ethers.Contract(nftAddr, tigerNFTABI, provider);\n    const mainnet_chain_id = \"0x1\"\n\n    const sortOptions = ['by id', 'price low to high', 'price high to low', 'by tokens owned', 'last sold']\n\n    window.ethereum.on('chainChanged', handleChainChanged);\n\n    function handleChainChanged(_chainId) {\n        if (_chainId.toString() !== mainnet_chain_id) {\n            setChainWarning(true)\n        }\n        window.location.reload()\n    }\n\n    async function connectToMetamask() {\n        try {\n            let res = await signer.getAddress()\n            console.log(\"Signed in\", res)\n            setAddress(res)\n            let _chainId = (await window.ethereum.request({ method: 'eth_chainId' }))\n            if (_chainId.toString() !== mainnet_chain_id) {\n                setChainWarning(true)\n            }\n        }\n        catch(err) {\n            console.log(\"Not signed in\")\n            await provider.send(\"eth_requestAccounts\", [])\n        }\n    }\n\n    const getWalletOfOwner = async () => {\n        console.log('meow')\n        let balanceBN = await contract.getBalance(address)\n        let balance = Number(balanceBN)\n        let temp = [...walletOfOwner]\n        for (let i = 0; i < balance; i++) {\n            let token = await contract.tigerByOwnerAndIndex(address, i)\n            temp.push(token)\n        }\n        console.log('temp: ',temp)\n        await setWalletOfOwner(temp)\n        return walletOfOwner\n    }\n\n    useEffect(() => {connectToMetamask().catch(err => console.error(err))}, [])\n\n    useEffect(() => {\n        if (address) getWalletOfOwner().catch(err => console.error(err))\n    }, [address])\n\n    return (\n        <div className=\"app\">\n        <Header address={address} connect={connectToMetamask} sortOptions={sortOptions} setSortBy={setSortBy}/>\n        <TokenList provider={provider} address={address} contract={contract} page={page} tokensPerPage={tokensPerPage} totalSupply={totalSupply} sortBy={sortBy}\n        setCurrentlyBuying={setCurrentlyBuying} walletOfOwner={walletOfOwner}/>\n            <div className='flex-centered '>\n            <div className='page-button'>Page:</div>\n            {page > 0 ? <div className='page-button' onClick={() => {setPage(page - 1)}}>Prev</div> : <></>}\n            {((page + 1) * tokensPerPage) < totalSupply ? <div className='page-button' onClick={() => {setPage(page + 1)}}>Next</div> : <></>}\n            </div>\n            <ChainMsg open={chainWarning} setOpen={setChainWarning}/>\n            <BuyDialog currentlyBuying={currentlyBuying} setCurrentlyBuying={setCurrentlyBuying} contract={contract} address={address} signer={signer}/>\n            </div>\n        );\n    }\n\n    export default App;\n"]},"metadata":{},"sourceType":"module"}