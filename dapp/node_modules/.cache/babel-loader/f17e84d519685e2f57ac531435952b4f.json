{"ast":null,"code":"var _jsxFileName = \"/Users/theo/Documents/ripdao-frontend/dapp/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport '../style/app.css';\nimport Header from './Header.js';\nimport Background from './Background.js';\nimport tigerNFTABI from '../assets/TigerNFT';\nimport ChainMsg from './Modal.js';\nimport BuyDialog from './BuyDialog.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [address, setAddress] = useState();\n  const [chainWarning, setChainWarning] = useState(false);\n  const [currentlyBuying, setCurrentlyBuying] = useState(null);\n  const totalSupply = 100;\n  let provider; // window.ethereum.enable().then(provider = new ethers.providers.Web3Provider(window.ethereum, \"mainnet\"))\n  // const signer = provider.getSigner()\n  // window.signer = signer\n  // // const nftAddr = '0xDC04D8183a0C91c40E02dd5a0e06Ee6a2D25685F'\n  // // const contract = new ethers.Contract(nftAddr, tigerNFTABI, provider);\n  // const mainnet_chain_id = \"0x1\"\n  // const sortOptions = ['by id', 'price low to high', 'price high to low', 'by tokens owned', 'last sold']\n  // window.ethereum.on('chainChanged', handleChainChanged);\n  // function handleChainChanged(_chainId) {\n  //     if (_chainId.toString() !== mainnet_chain_id) {\n  //         setChainWarning(true)\n  //     }\n  //     window.location.reload()\n  // }\n  // async function connectToMetamask() {\n  //     try {\n  //         let res = await signer.getAddress()\n  //         console.log(\"Signed in\", res)\n  //         setAddress(res)\n  //         let _chainId = (await window.ethereum.request({ method: 'eth_chainId' }))\n  //         if (_chainId.toString() !== mainnet_chain_id) {\n  //             setChainWarning(true)\n  //         }\n  //     }\n  //     catch(err) {\n  //         console.log(\"Not signed in\")\n  //         await provider.send(\"eth_requestAccounts\", [])\n  //     }\n  // }\n  // const getWalletOfOwner = async () => {\n  //     console.log('meow')\n  //     let balanceBN = await contract.getBalance(address)\n  //     let balance = Number(balanceBN)\n  //     let temp = [...walletOfOwner]\n  //     for (let i = 0; i < balance; i++) {\n  //         let token = await contract.tigerByOwnerAndIndex(address, i)\n  //         temp.push(token)\n  //     }\n  //     console.log('temp: ',temp)\n  //     await setWalletOfOwner(temp)\n  //     return walletOfOwner\n  // }\n  // useEffect(() => {connectToMetamask().catch(err => console.error(err))}, [])\n  // useEffect(() => {\n  //     if (address) getWalletOfOwner().catch(err => console.error(err))\n  // }, [address])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app w-2214 h-4453\",\n    children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      address: address // connect={connectToMetamask}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ChainMsg, {\n      open: chainWarning,\n      setOpen: setChainWarning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"/PxXUhm1fZad5BHkysihlFsNeIM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/theo/Documents/ripdao-frontend/dapp/src/components/App.js"],"names":["useEffect","useState","ethers","Header","Background","tigerNFTABI","ChainMsg","BuyDialog","App","address","setAddress","chainWarning","setChainWarning","currentlyBuying","setCurrentlyBuying","totalSupply","provider"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,kBAAP;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEX,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,EAAtC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACY,eAAD,EAAkBC,kBAAlB,IAAwCb,QAAQ,CAAC,IAAD,CAAtD;AAEA,QAAMc,WAAW,GAAG,GAApB;AAEA,MAAIC,QAAJ,CARW,CASX;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACA,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,MAAD;AACA,MAAA,OAAO,EAAEP,OADT,CAEA;;AAFA;AAAA;AAAA;AAAA;AAAA,YAFA,eAOI,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEE,YAAhB;AAA8B,MAAA,OAAO,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYC;;GA3EIJ,G;;KAAAA,G;AA6EL,eAAeA,GAAf","sourcesContent":["import {useEffect, useState} from 'react';\nimport { ethers } from 'ethers';\nimport '../style/app.css';\nimport Header from './Header.js';\nimport Background from './Background.js';\nimport tigerNFTABI from '../assets/TigerNFT'\nimport ChainMsg from './Modal.js'\nimport BuyDialog from './BuyDialog.js'\n\nfunction App() {\n\n    const [address, setAddress] = useState()\n    const [chainWarning, setChainWarning] = useState(false)\n    const [currentlyBuying, setCurrentlyBuying] = useState(null)\n    \n    const totalSupply = 100\n\n    let provider\n    // window.ethereum.enable().then(provider = new ethers.providers.Web3Provider(window.ethereum, \"mainnet\"))\n    // const signer = provider.getSigner()\n    // window.signer = signer\n    // // const nftAddr = '0xDC04D8183a0C91c40E02dd5a0e06Ee6a2D25685F'\n    // // const contract = new ethers.Contract(nftAddr, tigerNFTABI, provider);\n    // const mainnet_chain_id = \"0x1\"\n\n    // const sortOptions = ['by id', 'price low to high', 'price high to low', 'by tokens owned', 'last sold']\n\n    // window.ethereum.on('chainChanged', handleChainChanged);\n\n    // function handleChainChanged(_chainId) {\n    //     if (_chainId.toString() !== mainnet_chain_id) {\n    //         setChainWarning(true)\n    //     }\n    //     window.location.reload()\n    // }\n\n    // async function connectToMetamask() {\n    //     try {\n    //         let res = await signer.getAddress()\n    //         console.log(\"Signed in\", res)\n    //         setAddress(res)\n    //         let _chainId = (await window.ethereum.request({ method: 'eth_chainId' }))\n    //         if (_chainId.toString() !== mainnet_chain_id) {\n    //             setChainWarning(true)\n    //         }\n    //     }\n    //     catch(err) {\n    //         console.log(\"Not signed in\")\n    //         await provider.send(\"eth_requestAccounts\", [])\n    //     }\n    // }\n\n    // const getWalletOfOwner = async () => {\n    //     console.log('meow')\n    //     let balanceBN = await contract.getBalance(address)\n    //     let balance = Number(balanceBN)\n    //     let temp = [...walletOfOwner]\n    //     for (let i = 0; i < balance; i++) {\n    //         let token = await contract.tigerByOwnerAndIndex(address, i)\n    //         temp.push(token)\n    //     }\n    //     console.log('temp: ',temp)\n    //     await setWalletOfOwner(temp)\n    //     return walletOfOwner\n    // }\n\n    // useEffect(() => {connectToMetamask().catch(err => console.error(err))}, [])\n\n    // useEffect(() => {\n    //     if (address) getWalletOfOwner().catch(err => console.error(err))\n    // }, [address])\n\n    return (\n        <div className=\"app w-2214 h-4453\">\n        <Background />\n        <Header \n        address={address} \n        // connect={connectToMetamask}\n        />\n    \n            <ChainMsg open={chainWarning} setOpen={setChainWarning}/>\n            {/* <BuyDialog currentlyBuying={currentlyBuying} setCurrentlyBuying={setCurrentlyBuying} contract={contract} address={address} signer={signer}/> */}\n            </div>\n        );\n    }\n\n    export default App;\n"]},"metadata":{},"sourceType":"module"}